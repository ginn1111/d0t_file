{
  "numStartups": 43,
  "installMethod": "unknown",
  "autoUpdates": true,
  "preferredNotifChannel": "terminal_bell",
  "tipsHistory": {
    "new-user-warmup": 1,
    "memory-command": 35,
    "theme-command": 5,
    "prompt-queue": 34,
    "enter-to-steer-in-relatime": 12,
    "todo-list": 13,
    "# for memory": 36,
    "install-github-app": 37,
    "permissions": 38,
    "drag-and-drop-images": 39,
    "double-esc": 40,
    "continue": 41,
    "custom-commands": 20,
    "shift-tab": 43,
    "custom-agents": 22
  },
  "userID": "f92fbdbad287b77849851118e428cea2912c4f05dc4a02419bc542cac3898eed",
  "firstStartTime": "2025-07-19T09:57:09.901Z",
  "projects": {
    "/Users/gin/tools/d0t_file": {
      "allowedTools": [],
      "history": [
        {
          "display": "@command/add-fe-mcp.md ",
          "pastedContents": {}
        },
        {
          "display": "compress all the dir at this dir",
          "pastedContents": {}
        },
        {
          "display": "/config ",
          "pastedContents": {}
        },
        {
          "display": "add cl alias for claude to fish config",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "!uvx",
          "pastedContents": {}
        },
        {
          "display": "uvx",
          "pastedContents": {}
        },
        {
          "display": "!uvx --help",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "install uvx",
          "pastedContents": {}
        },
        {
          "display": "!uvx",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "/vim ",
          "pastedContents": {}
        },
        {
          "display": "/help ",
          "pastedContents": {}
        },
        {
          "display": "/hooks ",
          "pastedContents": {}
        },
        {
          "display": "/ide ",
          "pastedContents": {}
        },
        {
          "display": "/cost ",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "see log of mcp error",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "/init ",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 4,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "kitty.conf",
        "config.fish",
        "options.lua",
        "editor.lua",
        "lazy.lua"
      ],
      "exampleFilesGeneratedAt": 1753375300469,
      "lastTotalWebSearchRequests": 0,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 0,
      "lastAPIDuration": 0,
      "lastDuration": 479383,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 0,
      "lastTotalOutputTokens": 0,
      "lastTotalCacheCreationInputTokens": 0,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "ba6ca3d5-d4c5-463f-aadf-41a893af614a"
    },
    "/Users/gin/workspace/yrism/FE": {
      "allowedTools": [],
      "history": [
        {
          "display": "/compact ",
          "pastedContents": {}
        },
        {
          "display": "commit with name thuanpv and email is thuanpv@yrism.com",
          "pastedContents": {}
        },
        {
          "display": "checkout to another branch name enhance/serena, commit and push",
          "pastedContents": {}
        },
        {
          "display": "yes add it",
          "pastedContents": {}
        },
        {
          "display": "Why the liscene be removed from package-lock.json?",
          "pastedContents": {}
        },
        {
          "display": "!lazygit",
          "pastedContents": {}
        },
        {
          "display": "!lzg",
          "pastedContents": {}
        },
        {
          "display": "serena overview changes",
          "pastedContents": {}
        },
        {
          "display": "serena onboarding",
          "pastedContents": {}
        },
        {
          "display": "serea onboarding",
          "pastedContents": {}
        },
        {
          "display": "serena check onboarding performance",
          "pastedContents": {}
        },
        {
          "display": "~/workspace/yrism/FE",
          "pastedContents": {}
        },
        {
          "display": "activate project",
          "pastedContents": {}
        },
        {
          "display": "active project",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "use serena active project",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 4,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "FeedReactionAndComment.tsx",
        "FeedList.tsx",
        "postApi.ts",
        "UpSertPost.tsx",
        "CommentBox.tsx"
      ],
      "exampleFilesGeneratedAt": 1753376729147,
      "lastCost": 1.0299084499999998,
      "lastAPIDuration": 251806,
      "lastDuration": 1034323,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 24722,
      "lastTotalOutputTokens": 9506,
      "lastTotalCacheCreationInputTokens": 144839,
      "lastTotalCacheReadInputTokens": 1003318,
      "lastTotalWebSearchRequests": 0,
      "lastSessionId": "ca07256a-ea19-4672-9bf2-9b072b134415"
    },
    "/Users/gin/workspace": {
      "allowedTools": [],
      "history": [
        {
          "display": "/clear ",
          "pastedContents": {}
        },
        {
          "display": "understand the yrism projects using prompt in @git_contribution_analysis.md ",
          "pastedContents": {}
        },
        {
          "display": "!ls",
          "pastedContents": {}
        },
        {
          "display": "! ll -al",
          "pastedContents": {}
        },
        {
          "display": "understand the payme-vn- project using prompt in @git_contribution_analysis.md ",
          "pastedContents": {}
        },
        {
          "display": "understand the payme-vn-site project using prompt in @git_contribution_analysis.md ",
          "pastedContents": {}
        },
        {
          "display": "understand the payme-vn-pay project using prompt in @git_contribution_analysis.md ",
          "pastedContents": {}
        },
        {
          "display": "! ls",
          "pastedContents": {}
        },
        {
          "display": "! ll",
          "pastedContents": {}
        },
        {
          "display": "ll!",
          "pastedContents": {}
        },
        {
          "display": "understand the bo-payme-vn project using prompt in @git_contribution_analysis.md ",
          "pastedContents": {}
        },
        {
          "display": "understand all the projects using prompt in @git_contribution_analysis.md ",
          "pastedContents": {}
        },
        {
          "display": "the output must be the markdown file",
          "pastedContents": {}
        },
        {
          "display": "understand bo-payme-vn project using prompt in @git_contribution_analysis.md ",
          "pastedContents": {}
        },
        {
          "display": "/clear ",
          "pastedContents": {}
        },
        {
          "display": "understand ",
          "pastedContents": {}
        },
        {
          "display": "/hooks ",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "https://claude.ai/public/artifacts/e2725e41-cca5-48e5-9c15-6eab92012e75 ",
          "pastedContents": {}
        },
        {
          "display": "get all command and place at the current dir via the link: https://claude.ai/public/artifacts/e2725e41-cca5-48e5-9c15-6eab92012e75",
          "pastedContents": {}
        },
        {
          "display": "/add-serena-mcp",
          "pastedContents": {}
        },
        {
          "display": "claude mcp add serena -- uvx --from git+https://github.com/oraios/serena serena-mcp-server --context ide-assistant --project $(pwd)",
          "pastedContents": {}
        },
        {
          "display": "docker run --rm -i --network host -v /path/to/your/projects:/workspaces/projects ghcr.io/oraios/serena:latest serena-mcp-server --transport stdio",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "under ",
          "pastedContents": {}
        },
        {
          "display": "/agents ",
          "pastedContents": {}
        },
        {
          "display": "understand bo-payme project",
          "pastedContents": {}
        },
        {
          "display": "compress each prject to each compress file",
          "pastedContents": {}
        },
        {
          "display": "compress the projects in the yrism folder",
          "pastedContents": {}
        },
        {
          "display": "zip each folder to each file, do not combine it into the single file. the format must efficient for claude desktop upload",
          "pastedContents": {}
        },
        {
          "display": "remove all node_modules in each project folder",
          "pastedContents": {}
        },
        {
          "display": "pls compress all the folder at the current dir. The format is effecient for upload to Claude desktop",
          "pastedContents": {}
        },
        {
          "display": "/vim ",
          "pastedContents": {}
        },
        {
          "display": "make compress",
          "pastedContents": {}
        },
        {
          "display": "before make compress, please remove all the build files or folder",
          "pastedContents": {}
        },
        {
          "display": "compress with the format that I can upload to claude desktop",
          "pastedContents": {}
        },
        {
          "display": "compress all the dir at the current dir",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {
        "serena": {
          "type": "stdio",
          "command": "uvx",
          "args": [
            "--from",
            "git+https://github.com/oraios/serena",
            "serena-mcp-server",
            "--context",
            "ide-assistant",
            "--project",
            "/Users/gin/workspace"
          ],
          "env": {}
        }
      },
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 4,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastTotalWebSearchRequests": 0,
      "lastCost": 2.0940866999999996,
      "lastAPIDuration": 575796,
      "lastDuration": 1596292,
      "lastLinesAdded": 1157,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 101652,
      "lastTotalOutputTokens": 25551,
      "lastTotalCacheCreationInputTokens": 198916,
      "lastTotalCacheReadInputTokens": 3072289,
      "lastSessionId": "dfd5a587-6a33-43f8-98f6-83ea334318e9"
    },
    "/Users/gin/propmt": {
      "allowedTools": [],
      "history": [
        {
          "display": "This consist of evaluate the level?",
          "pastedContents": {}
        },
        {
          "display": "the output is the prompt that I give to the claude desktop",
          "pastedContents": {}
        },
        {
          "display": "the goal the the @git_contribution_analysis.md is understand the level of my skill, depend the contribute for the project, the claude desktop will take the information.",
          "pastedContents": {}
        },
        {
          "display": "recommend claude to read the .git folder with the user is thuan, gin to evaluate the contributed for the project",
          "pastedContents": {}
        },
        {
          "display": "make a propmt that require the claude desktop to acquire the knowledge about career journey via the projects, side projects, CV. In each project, claude need understand the project, listing all the feature related and allow me to pick what I implement, bugs fixed, optimize.",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 2,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastTotalWebSearchRequests": 0,
      "lastCost": 0.05593659999999998,
      "lastAPIDuration": 29885,
      "lastDuration": 292754,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 1406,
      "lastTotalOutputTokens": 1214,
      "lastTotalCacheCreationInputTokens": 3504,
      "lastTotalCacheReadInputTokens": 81550,
      "lastSessionId": "77cd949a-21b2-45b9-aaea-6c1843df6604"
    },
    "/Users/gin": {
      "allowedTools": [],
      "history": [],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 1,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "lastTotalWebSearchRequests": 0
    },
    "/Users/gin/claude-gemini-bridge": {
      "allowedTools": [],
      "history": [
        {
          "display": "run the install.sh script and fix the problems",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 0,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "hooks/gemini-bridge.sh",
        "hooks/lib/json-parser.sh",
        "hooks/lib/gemini-wrapper.sh",
        "hooks/lib/path-converter.sh",
        "test/test-runner.sh"
      ],
      "exampleFilesGeneratedAt": 1753497928656,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 0.18745779999999998,
      "lastAPIDuration": 85706,
      "lastDuration": 584642,
      "lastLinesAdded": 1,
      "lastLinesRemoved": 1,
      "lastTotalInputTokens": 6909,
      "lastTotalOutputTokens": 2422,
      "lastTotalCacheCreationInputTokens": 15226,
      "lastTotalCacheReadInputTokens": 311217,
      "lastTotalWebSearchRequests": 0,
      "lastSessionId": "a2067436-5bad-4872-9bdd-eeae7a8f364b"
    },
    "/Users/gin/dev/celestigin": {
      "allowedTools": [],
      "history": [
        {
          "display": "@commit-",
          "pastedContents": {}
        },
        {
          "display": "@commit",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "@commit-and-no",
          "pastedContents": {}
        },
        {
          "display": "@command/commit-and-no-push.md ",
          "pastedContents": {}
        },
        {
          "display": "@con",
          "pastedContents": {}
        },
        {
          "display": "!ls .claude",
          "pastedContents": {}
        },
        {
          "display": "@.claude/command/c",
          "pastedContents": {}
        },
        {
          "display": "@commit-and-no-push.md",
          "pastedContents": {}
        },
        {
          "display": "!cd .claude",
          "pastedContents": {}
        },
        {
          "display": "!ls",
          "pastedContents": {}
        },
        {
          "display": "!ll",
          "pastedContents": {}
        },
        {
          "display": "@commit",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "@/User/home/gin/.claude/command/onboarding-project.md",
          "pastedContents": {}
        },
        {
          "display": "@/User/home/gin/.claude/command/add-fe-mcp.md",
          "pastedContents": {}
        },
        {
          "display": "~/.claude/command/add-fe-mcp",
          "pastedContents": {}
        },
        {
          "display": "/init ",
          "pastedContents": {}
        },
        {
          "display": "@add-fe-mcp.md",
          "pastedContents": {}
        },
        {
          "display": "/status ",
          "pastedContents": {}
        },
        {
          "display": "q",
          "pastedContents": {}
        },
        {
          "display": "/comman",
          "pastedContents": {}
        },
        {
          "display": " @add-fe-mcp.md",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "/vim ",
          "pastedContents": {}
        },
        {
          "display": "read the codbase",
          "pastedContents": {}
        },
        {
          "display": "read the codebase",
          "pastedContents": {}
        },
        {
          "display": "/hooks ",
          "pastedContents": {}
        },
        {
          "display": "/memory ",
          "pastedContents": {}
        },
        {
          "display": "/vim ",
          "pastedContents": {}
        },
        {
          "display": "vim",
          "pastedContents": {}
        },
        {
          "display": "/vim ",
          "pastedContents": {}
        },
        {
          "display": "@command/add-serena-mcp.md ",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "@command/add-serena-mcp.md ",
          "pastedContents": {}
        },
        {
          "display": "/help ",
          "pastedContents": {}
        },
        {
          "display": "/init ",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {
        "serena": {
          "type": "stdio",
          "command": "uvx",
          "args": [
            "--from",
            "git+https://github.com/oraios/serena",
            "serena-mcp-server",
            "--context",
            "ide-assistant",
            "--project",
            "/Users/gin/dev/celestigin/.claude"
          ],
          "env": {}
        },
        "context7": {
          "type": "sse",
          "url": "https://mcp.context7.com/sse"
        }
      },
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": true,
      "projectOnboardingSeenCount": 4,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "exampleFiles": [
        "venus-signs-section.tsx",
        "venus-sign-detail-page.tsx",
        "index-page.tsx",
        "home-page.tsx",
        "affiliate-dashboard/page.tsx"
      ],
      "exampleFilesGeneratedAt": 1753694253685,
      "lastTotalWebSearchRequests": 0,
      "hasCompletedProjectOnboarding": true,
      "lastCost": 0.0002488,
      "lastAPIDuration": 1082,
      "lastDuration": 147050,
      "lastLinesAdded": 0,
      "lastLinesRemoved": 0,
      "lastTotalInputTokens": 256,
      "lastTotalOutputTokens": 11,
      "lastTotalCacheCreationInputTokens": 0,
      "lastTotalCacheReadInputTokens": 0,
      "lastSessionId": "7310b0ec-084c-4509-9f77-150afbd7bc4a"
    },
    "/Users/gin/dev": {
      "allowedTools": [],
      "history": [],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 0,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false
    }
  },
  "oauthAccount": {
    "accountUuid": "39b31cf2-3a7f-4956-93c9-82110f487579",
    "emailAddress": "vanthuanjw@gmail.com",
    "organizationUuid": "e7c5422f-d97c-4689-9f2b-846e7011c38e",
    "organizationRole": "admin",
    "workspaceRole": null,
    "organizationName": "vanthuanjw@gmail.com's Organization"
  },
  "isQualifiedForDataSharing": false,
  "hasCompletedOnboarding": true,
  "lastOnboardingVersion": "1.0.59",
  "subscriptionNoticeCount": 0,
  "hasAvailableSubscription": false,
  "cachedChangelog": "# Changelog\n\n## 1.0.62\n\n- Added @-mention support with typeahead for custom agents. @<your-custom-agent> to invoke it\n- Hooks: Added SessionStart hook for new session initialization\n- /add-dir command now supports typeahead for directory paths\n- Improved network connectivity check reliability\n\n## 1.0.61\n\n- Transcript mode (Ctrl+R): Changed Esc to exit transcript mode rather than interrupt\n- Settings: Added `--settings` flag to load settings from a JSON file\n- Settings: Fixed resolution of settings files paths that are symlinks\n- OTEL: Fixed reporting of wrong organization after authentication changes\n- Slash commands: Fixed permissions checking for allowed-tools with Bash\n- IDE: Added support for pasting images in VSCode MacOS using ⌘+V\n- IDE: Added `CLAUDE_CODE_AUTO_CONNECT_IDE=false` for disabling IDE auto-connection\n- Added `CLAUDE_CODE_SHELL_PREFIX` for wrapping Claude and user-provided shell commands run by Claude Code\n\n## 1.0.60\n\n- You can now create custom subagents for specialized tasks! Run /agents to get started\n\n## 1.0.59\n\n- SDK: Added tool confirmation support with canUseTool callback\n- SDK: Allow specifying env for spawned process\n- Hooks: Exposed PermissionDecision to hooks (including \"ask\")\n- Hooks: UserPromptSubmit now supports additionalContext in advanced JSON output\n- Fixed issue where some Max users that specified Opus would still see fallback to Sonnet\n\n## 1.0.58\n\n- Added support for reading PDFs\n- MCP: Improved server health status display in 'claude mcp list'\n- Hooks: Added CLAUDE_PROJECT_DIR env var for hook commands\n\n## 1.0.57\n\n- Added support for specifying a model in slash commands\n- Improved permission messages to help Claude understand allowed tools\n- Fix: Remove trailing newlines from bash output in terminal wrapping\n\n## 1.0.56\n\n- Windows: Enabled shift+tab for mode switching on versions of Node.js that support terminal VT mode\n- Fixes for WSL IDE detection\n- Fix an issue causing awsRefreshHelper changes to .aws directory not to be picked up\n\n## 1.0.55\n\n- Clarified knowledge cutoff for Opus 4 and Sonnet 4 models\n- Windows: fixed Ctrl+Z crash\n- SDK: Added ability to capture error logging\n- Add --system-prompt-file option to override system prompt in print mode\n\n## 1.0.54\n\n- Hooks: Added UserPromptSubmit hook and the current working directory to hook inputs\n- Custom slash commands: Added argument-hint to frontmatter\n- Windows: OAuth uses port 45454 and properly constructs browser URL\n- Windows: mode switching now uses alt + m, and plan mode renders properly\n- Shell: Switch to in-memory shell snapshot to fix file-related errors\n\n## 1.0.53\n\n- Updated @-mention file truncation from 100 lines to 2000 lines\n- Add helper script settings for AWS token refresh: awsAuthRefresh (for foreground operations like aws sso login) and awsCredentialExport (for background operation with STS-like response).\n\n## 1.0.52\n\n- Added support for MCP server instructions\n\n## 1.0.51\n\n- Added support for native Windows (requires Git for Windows)\n- Added support for Bedrock API keys through environment variable AWS_BEARER_TOKEN_BEDROCK\n- Settings: /doctor can now help you identify and fix invalid setting files\n- `--append-system-prompt` can now be used in interactive mode, not just --print/-p.\n- Increased auto-compact warning threshold from 60% to 80%\n- Fixed an issue with handling user directories with spaces for shell snapshots\n- OTEL resource now includes os.type, os.version, host.arch, and wsl.version (if running on Windows Subsystem for Linux)\n- Custom slash commands: Fixed user-level commands in subdirectories\n- Plan mode: Fixed issue where rejected plan from sub-task would get discarded\n\n## 1.0.48\n\n- Fixed a bug in v1.0.45 where the app would sometimes freeze on launch\n- Added progress messages to Bash tool based on the last 5 lines of command output\n- Added expanding variables support for MCP server configuration\n- Moved shell snapshots from /tmp to ~/.claude for more reliable Bash tool calls\n- Improved IDE extension path handling when Claude Code runs in WSL\n- Hooks: Added a PreCompact hook\n- Vim mode: Added c, f/F, t/T\n\n## 1.0.45\n\n- Redesigned Search (Grep) tool with new tool input parameters and features\n- Disabled IDE diffs for notebook files, fixing \"Timeout waiting after 1000ms\" error\n- Fixed config file corruption issue by enforcing atomic writes\n- Updated prompt input undo to Ctrl+\\_ to avoid breaking existing Ctrl+U behavior, matching zsh's undo shortcut\n- Stop Hooks: Fixed transcript path after /clear and fixed triggering when loop ends with tool call\n- Custom slash commands: Restored namespacing in command names based on subdirectories. For example, .claude/commands/frontend/component.md is now /frontend:component, not /component.\n\n## 1.0.44\n\n- New /export command lets you quickly export a conversation for sharing\n- MCP: resource_link tool results are now supported\n- MCP: tool annotations and tool titles now display in /mcp view\n- Changed Ctrl+Z to suspend Claude Code. Resume by running `fg`. Prompt input undo is now Ctrl+U.\n\n## 1.0.43\n\n- Fixed a bug where the theme selector was saving excessively\n- Hooks: Added EPIPE system error handling\n\n## 1.0.42\n\n- Added tilde (`~`) expansion support to `/add-dir` command\n\n## 1.0.41\n\n- Hooks: Split Stop hook triggering into Stop and SubagentStop\n- Hooks: Enabled optional timeout configuration for each command\n- Hooks: Added \"hook_event_name\" to hook input\n- Fixed a bug where MCP tools would display twice in tool list\n- New tool parameters JSON for Bash tool in `tool_decision` event\n\n## 1.0.40\n\n- Fixed a bug causing API connection errors with UNABLE_TO_GET_ISSUER_CERT_LOCALLY if `NODE_EXTRA_CA_CERTS` was set\n\n## 1.0.39\n\n- New Active Time metric in OpenTelemetry logging\n\n## 1.0.38\n\n- Released hooks. Special thanks to community input in https://github.com/anthropics/claude-code/issues/712. Docs: https://docs.anthropic.com/en/docs/claude-code/hooks\n\n## 1.0.37\n\n- Remove ability to set `Proxy-Authorization` header via ANTHROPIC_AUTH_TOKEN or apiKeyHelper\n\n## 1.0.36\n\n- Web search now takes today's date into context\n- Fixed a bug where stdio MCP servers were not terminating properly on exit\n\n## 1.0.35\n\n- Added support for MCP OAuth Authorization Server discovery\n\n## 1.0.34\n\n- Fixed a memory leak causing a MaxListenersExceededWarning message to appear\n\n## 1.0.33\n\n- Improved logging functionality with session ID support\n- Added prompt input undo functionality (Ctrl+Z and vim 'u' command)\n- Improvements to plan mode\n\n## 1.0.32\n\n- Updated loopback config for litellm\n- Added forceLoginMethod setting to bypass login selection screen\n\n## 1.0.31\n\n- Fixed a bug where ~/.claude.json would get reset when file contained invalid JSON\n\n## 1.0.30\n\n- Custom slash commands: Run bash output, @-mention files, enable thinking with thinking keywords\n- Improved file path autocomplete with filename matching\n- Added timestamps in Ctrl-r mode and fixed Ctrl-c handling\n- Enhanced jq regex support for complex filters with pipes and select\n\n## 1.0.29\n\n- Improved CJK character support in cursor navigation and rendering\n\n## 1.0.28\n\n- Slash commands: Fix selector display during history navigation\n- Resizes images before upload to prevent API size limit errors\n- Added XDG_CONFIG_HOME support to configuration directory\n- Performance optimizations for memory usage\n- New attributes (terminal.type, language) in OpenTelemetry logging\n\n## 1.0.27\n\n- Streamable HTTP MCP servers are now supported\n- Remote MCP servers (SSE and HTTP) now support OAuth\n- MCP resources can now be @-mentioned\n- /resume slash command to switch conversations within Claude Code\n\n## 1.0.25\n\n- Slash commands: moved \"project\" and \"user\" prefixes to descriptions\n- Slash commands: improved reliability for command discovery\n- Improved support for Ghostty\n- Improved web search reliability\n\n## 1.0.24\n\n- Improved /mcp output\n- Fixed a bug where settings arrays got overwritten instead of merged\n\n## 1.0.23\n\n- Released TypeScript SDK: import @anthropic-ai/claude-code to get started\n- Released Python SDK: pip install claude-code-sdk to get started\n\n## 1.0.22\n\n- SDK: Renamed `total_cost` to `total_cost_usd`\n\n## 1.0.21\n\n- Improved editing of files with tab-based indentation\n- Fix for tool_use without matching tool_result errors\n- Fixed a bug where stdio MCP server processes would linger after quitting Claude Code\n\n## 1.0.18\n\n- Added --add-dir CLI argument for specifying additional working directories\n- Added streaming input support without require -p flag\n- Improved startup performance and session storage performance\n- Added CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR environment variable to freeze working directory for bash commands\n- Added detailed MCP server tools display (/mcp)\n- MCP authentication and permission improvements\n- Added auto-reconnection for MCP SSE connections on disconnect\n- Fixed issue where pasted content was lost when dialogs appeared\n\n## 1.0.17\n\n- We now emit messages from sub-tasks in -p mode (look for the parent_tool_use_id property)\n- Fixed crashes when the VS Code diff tool is invoked multiple times quickly\n- MCP server list UI improvements\n- Update Claude Code process title to display \"claude\" instead of \"node\"\n\n## 1.0.11\n\n- Claude Code can now also be used with a Claude Pro subscription\n- Added /upgrade for smoother switching to Claude Max plans\n- Improved UI for authentication from API keys and Bedrock/Vertex/external auth tokens\n- Improved shell configuration error handling\n- Improved todo list handling during compaction\n\n## 1.0.10\n\n- Added markdown table support\n- Improved streaming performance\n\n## 1.0.8\n\n- Fixed Vertex AI region fallback when using CLOUD_ML_REGION\n- Increased default otel interval from 1s -> 5s\n- Fixed edge cases where MCP_TIMEOUT and MCP_TOOL_TIMEOUT weren't being respected\n- Fixed a regression where search tools unnecessarily asked for permissions\n- Added support for triggering thinking non-English languages\n- Improved compacting UI\n\n## 1.0.7\n\n- Renamed /allowed-tools -> /permissions\n- Migrated allowedTools and ignorePatterns from .claude.json -> settings.json\n- Deprecated claude config commands in favor of editing settings.json\n- Fixed a bug where --dangerously-skip-permissions sometimes didn't work in --print mode\n- Improved error handling for /install-github-app\n- Bugfixes, UI polish, and tool reliability improvements\n\n## 1.0.6\n\n- Improved edit reliability for tab-indented files\n- Respect CLAUDE_CONFIG_DIR everywhere\n- Reduced unnecessary tool permission prompts\n- Added support for symlinks in @file typeahead\n- Bugfixes, UI polish, and tool reliability improvements\n\n## 1.0.4\n\n- Fixed a bug where MCP tool errors weren't being parsed correctly\n\n## 1.0.1\n\n- Added `DISABLE_INTERLEAVED_THINKING` to give users the option to opt out of interleaved thinking.\n- Improved model references to show provider-specific names (Sonnet 3.7 for Bedrock, Sonnet 4 for Console)\n- Updated documentation links and OAuth process descriptions\n\n## 1.0.0\n\n- Claude Code is now generally available\n- Introducing Sonnet 4 and Opus 4 models\n\n## 0.2.125\n\n- Breaking change: Bedrock ARN passed to `ANTHROPIC_MODEL` or `ANTHROPIC_SMALL_FAST_MODEL` should no longer contain an escaped slash (specify `/` instead of `%2F`)\n- Removed `DEBUG=true` in favor of `ANTHROPIC_LOG=debug`, to log all requests\n\n## 0.2.117\n\n- Breaking change: --print JSON output now returns nested message objects, for forwards-compatibility as we introduce new metadata fields\n- Introduced settings.cleanupPeriodDays\n- Introduced CLAUDE_CODE_API_KEY_HELPER_TTL_MS env var\n- Introduced --debug mode\n\n## 0.2.108\n\n- You can now send messages to Claude while it works to steer Claude in real-time\n- Introduced BASH_DEFAULT_TIMEOUT_MS and BASH_MAX_TIMEOUT_MS env vars\n- Fixed a bug where thinking was not working in -p mode\n- Fixed a regression in /cost reporting\n- Deprecated MCP wizard interface in favor of other MCP commands\n- Lots of other bugfixes and improvements\n\n## 0.2.107\n\n- CLAUDE.md files can now import other files. Add @path/to/file.md to ./CLAUDE.md to load additional files on launch\n\n## 0.2.106\n\n- MCP SSE server configs can now specify custom headers\n- Fixed a bug where MCP permission prompt didn't always show correctly\n\n## 0.2.105\n\n- Claude can now search the web\n- Moved system & account status to /status\n- Added word movement keybindings for Vim\n- Improved latency for startup, todo tool, and file edits\n\n## 0.2.102\n\n- Improved thinking triggering reliability\n- Improved @mention reliability for images and folders\n- You can now paste multiple large chunks into one prompt\n\n## 0.2.100\n\n- Fixed a crash caused by a stack overflow error\n- Made db storage optional; missing db support disables --continue and --resume\n\n## 0.2.98\n\n- Fixed an issue where auto-compact was running twice\n\n## 0.2.96\n\n- Claude Code can now also be used with a Claude Max subscription (https://claude.ai/upgrade)\n\n## 0.2.93\n\n- Resume conversations from where you left off from with \"claude --continue\" and \"claude --resume\"\n- Claude now has access to a Todo list that helps it stay on track and be more organized\n\n## 0.2.82\n\n- Added support for --disallowedTools\n- Renamed tools for consistency: LSTool -> LS, View -> Read, etc.\n\n## 0.2.75\n\n- Hit Enter to queue up additional messages while Claude is working\n- Drag in or copy/paste image files directly into the prompt\n- @-mention files to directly add them to context\n- Run one-off MCP servers with `claude --mcp-config <path-to-file>`\n- Improved performance for filename auto-complete\n\n## 0.2.74\n\n- Added support for refreshing dynamically generated API keys (via apiKeyHelper), with a 5 minute TTL\n- Task tool can now perform writes and run bash commands\n\n## 0.2.72\n\n- Updated spinner to indicate tokens loaded and tool usage\n\n## 0.2.70\n\n- Network commands like curl are now available for Claude to use\n- Claude can now run multiple web queries in parallel\n- Pressing ESC once immediately interrupts Claude in Auto-accept mode\n\n## 0.2.69\n\n- Fixed UI glitches with improved Select component behavior\n- Enhanced terminal output display with better text truncation logic\n\n## 0.2.67\n\n- Shared project permission rules can be saved in .claude/settings.json\n\n## 0.2.66\n\n- Print mode (-p) now supports streaming output via --output-format=stream-json\n- Fixed issue where pasting could trigger memory or bash mode unexpectedly\n\n## 0.2.63\n\n- Fixed an issue where MCP tools were loaded twice, which caused tool call errors\n\n## 0.2.61\n\n- Navigate menus with vim-style keys (j/k) or bash/emacs shortcuts (Ctrl+n/p) for faster interaction\n- Enhanced image detection for more reliable clipboard paste functionality\n- Fixed an issue where ESC key could crash the conversation history selector\n\n## 0.2.59\n\n- Copy+paste images directly into your prompt\n- Improved progress indicators for bash and fetch tools\n- Bugfixes for non-interactive mode (-p)\n\n## 0.2.54\n\n- Quickly add to Memory by starting your message with '#'\n- Press ctrl+r to see full output for long tool results\n- Added support for MCP SSE transport\n\n## 0.2.53\n\n- New web fetch tool lets Claude view URLs that you paste in\n- Fixed a bug with JPEG detection\n\n## 0.2.50\n\n- New MCP \"project\" scope now allows you to add MCP servers to .mcp.json files and commit them to your repository\n\n## 0.2.49\n\n- Previous MCP server scopes have been renamed: previous \"project\" scope is now \"local\" and \"global\" scope is now \"user\"\n\n## 0.2.47\n\n- Press Tab to auto-complete file and folder names\n- Press Shift + Tab to toggle auto-accept for file edits\n- Automatic conversation compaction for infinite conversation length (toggle with /config)\n\n## 0.2.44\n\n- Ask Claude to make a plan with thinking mode: just say 'think' or 'think harder' or even 'ultrathink'\n\n## 0.2.41\n\n- MCP server startup timeout can now be configured via MCP_TIMEOUT environment variable\n- MCP server startup no longer blocks the app from starting up\n\n## 0.2.37\n\n- New /release-notes command lets you view release notes at any time\n- `claude config add/remove` commands now accept multiple values separated by commas or spaces\n\n## 0.2.36\n\n- Import MCP servers from Claude Desktop with `claude mcp add-from-claude-desktop`\n- Add MCP servers as JSON strings with `claude mcp add-json <n> <json>`\n\n## 0.2.34\n\n- Vim bindings for text input - enable with /vim or /config\n\n## 0.2.32\n\n- Interactive MCP setup wizard: Run \"claude mcp add\" to add MCP servers with a step-by-step interface\n- Fix for some PersistentShell issues\n\n## 0.2.31\n\n- Custom slash commands: Markdown files in .claude/commands/ directories now appear as custom slash commands to insert prompts into your conversation\n- MCP debug mode: Run with --mcp-debug flag to get more information about MCP server errors\n\n## 0.2.30\n\n- Added ANSI color theme for better terminal compatibility\n- Fixed issue where slash command arguments weren't being sent properly\n- (Mac-only) API keys are now stored in macOS Keychain\n\n## 0.2.26\n\n- New /approved-tools command for managing tool permissions\n- Word-level diff display for improved code readability\n- Fuzzy matching for slash commands\n\n## 0.2.21\n\n- Fuzzy matching for /commands\n",
  "changelogLastFetched": 1753793699198,
  "fallbackAvailableWarningThreshold": 0.5,
  "lastReleaseNotesSeen": "1.0.61"
}